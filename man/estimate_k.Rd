% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kber.R
\name{estimate_k}
\alias{estimate_k}
\title{Estimate k}
\usage{
estimate_k(
  di,
  i,
  response,
  family,
  weights = NULL,
  k_range = c(-1, 3),
  plot = TRUE
)
}
\arguments{
\item{di}{a vector of stimulus distances (see \code{\link[=stimulus_contrast]{stimulus_contrast()}})}

\item{i}{a vector of stimulus magnitudes (see \code{\link[=stimulus_contrast]{stimulus_contrast()}})}

\item{response}{the response variable of the model (discrimination between stimuli)}

\item{family}{model family to use for \code{\link[=stimulus_model]{stimulus_model()}} (see \code{\link[=glm]{glm()}})}

\item{weights}{weights of each observation, used in binomial models (see \code{\link[=glm]{glm()}}).
Leave empty if each observation is 1 decision (binary stimuli)}

\item{k_range}{the range of \code{k} values in which to search for the optimal value of \code{k},
which minimises the AIC of \code{\link[=stimulus_model]{stimulus_model()}}, and its 95\% confidence intervals.}

\item{plot}{show diagnostic plot (recommended).
Solid black line shows how the AIC of \code{\link[=stimulus_model]{stimulus_model()}} varies with \code{k};
red vertical line shows the best fitting value of \code{k};
dashed horizontal line crosses the AIC curve at the 95\% confidence intervals for this \code{k} estimate.}
}
\value{
A summary table containing the best fitting value of \code{k} which minimises the model AIC,
its 95\% confidence intervals (\code{lower_95} and \code{upper_95}),
and the AIC values of \code{\link[=stimulus_model]{stimulus_model()}} for these values of k.
}
\description{
Fits a series of generalised linear models with \code{\link[=stimulus_model]{stimulus_model()}},
to find the best-fitting value of \code{k} (see \code{\link[=stimulus_contrast]{stimulus_contrast()}}) which maximises the model fit.
}
\examples{
data(stimuli)
#data contains columns for two stimuli of different magnitudes, a and b
stimuli$abs_diff <- abs(stimuli$stimulus_a - stimuli$stimulus_b) #stimulus distance = absolute difference between a and b
stimuli$mean_ab <- (stimuli$stimulus_a + stimuli$stimulus_b)/2 #stimulus magnitude = mean magnitude of a and b
#get stimulus model for k=1
estimate_k(di=stimuli$abs_diff, i=stimuli$mean_ab, response=stimuli$discrimination,
           family=binomial(link="logit"))
}
